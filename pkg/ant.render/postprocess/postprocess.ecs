pipeline "postprocess"
    .stage "pre_postprocess"
    .stage "blur"
    .stage "dof"
    .stage "bloom"
    .stage "tonemapping"
    .stage "fxaa"
    .stage "blit"

component "vblur_builder"
component "hblur_builder"
system "blur_system"
    .implement "postprocess/blur.lua"
    .method "init"
    .method "init_world"
    .method "blur"

system "postprocess_system"
    .implement "postprocess/postprocess.lua"
    .method "init"
    .method "init_world"
    .method "pre_postprocess"

policy "postprocess"
    .require_system "ant.render|render_system"
    --.require_system "ant.render|blur_system"
    .require_system "ant.render|postprocess_system"
    --.require_system "ant.render|resolve_msaa_system"
    .require_system "ant.render|postprocess_obj_system"
    --.require_system "ant.render|dof_system"
    .require_system "ant.render|bloom_system"
    .require_system "ant.render|tonemapping_system"
    .require_system "ant.render|fxaa_system"
    --.require_system "ant.render|blit_system"

component "postprocess"
component "postprocess_input".type "lua"
    .require_system "ant.render|postprocess_system"
policy "postprocess_object"
    .component "postprocess"
    .component "postprocess_input"

policy "postprocess_queue"
    .require_policy "render_target"
    .component "queue_name"

system "postprocess_obj_system"
    .require_interface "ant.render|irender_layer"
    .implement "postprocess/postprocess_obj.lua"
    .method "init"

component "resolver"

system "resolve_msaa_system"
    .implement "postprocess/resolve.lua"
    .method "init_world"
    .method "resolve"

component "downsample_drawer"
component "upsample_drawer"
system "downsample_system"
    .implement "postprocess/downsample.lua"
    .method "init"

component "tonemapping_drawer"
component "tonemapping_queue"
system "tonemapping_system"
    .implement "postprocess/tonemapping.lua"
    .method "init"
    .method "init_world"
    .method "data_changed"
    .method "tonemapping"

component "bloom_downsampler"
component "bloom_upsampler"

system "bloom_system"
    .implement "postprocess/bloom.lua"
    .method "init"
    .method "init_world"
    .method "data_changed"
    .method "bloom"

component "fxaa_drawer"
component "fxaa_queue"
system "fxaa_system"
    .implement "postprocess/fxaa.lua"
    .method "init"
    .method "init_world"
    .method "data_changed"
    .method "fxaa"

-- system "dof_system"
--     .implement "postprocess/DoF.lua"
--     .require_interface "ant.objcontroller|iobj_motion"
--     .require_interface "ant.asset|imaterial"
--     .require_interface "ant.camera|icamera"
--     .method "post_init"
--     .method "data_changed"

-- system "simpledof_system"
--     .implement "postprocess/DoF2.lua"
--     .require_interface "ant.objcontroller|iobj_motion"
--     .require_interface "ant.asset|imaterial"
--     .require_interface "ant.camera|icamera"
--     .method "entity_init"
--     .method "data_changed"

component "blit_obj"
system "blit_system"
    .implement "postprocess/blit.lua"
    .method "init"
    .method "init_world"
    .method "blit"