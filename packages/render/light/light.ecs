interface "light"
    .implement "light/light.lua"
    .method "create_ambient_light_entity"
    .method "create_directional_light_entity"
    .method "create_point_light_entity"
    .method "create_spot_light_entity"

policy "light.ambient"
    .require_transform "ambient_transform"
    .component "ambient_light"
    .component "light"
    .unique_component "ambient_light"

policy "light.directional"
    .require_transform "directional_transform"
    .component "directional_light"
    .component "light"
    .component "direction"
    .component "position"
    .unique_component "directional_light"

policy "light.point"
    .require_transform "point_transform"
    .component "point_light"
    .component "light"
    .component "direction"
    .component "position"

policy "light.spot"
    .require_transform "spot_transform"
    .component "spot_light"
    .component "light"
    .component "direction"
    .component "position"

transform "ambient_transform"
    .implement "light/light.lua"
    .input "ambient_light"
    .output "light"
    .method "process_prefab"

transform "directional_transform"
    .implement "light/light.lua"
    .input "directional_light"
    .output "light"
    .method "process_prefab"

transform "point_transform"
    .implement "light/light.lua"
    .input "point_light"
    .output "light"
    .method "process_prefab"

transform "spot_transform"
    .implement "light/light.lua"
    .input "spot_light"
    .output "light"
    .method "process_prefab"
