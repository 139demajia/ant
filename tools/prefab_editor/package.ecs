import "@ant.general"
import "@ant.rmlui"
import "@ant.render"
import "@ant.animation"
import "@ant.collision"
import "@ant.sky"
import "@ant.objcontroller"
import "@ant.scene"
import "@ant.camera"
import "@ant.asset"
import "@ant.effekseer"
import "@ant.audio"

system "init_system"
    .implement "init_system.lua"
    .require_system "ant.rmlui|rmlui_system"
    .require_system "ant.effekseer|effekseer_system"
    .require_system "ant.audio|audio_system"
    .require_policy "ant.render|light"
    .require_policy "ant.sky|procedural_sky"
    .require_policy "ant.sky|skybox"
    
    .require_policy "ant.animation|animation"
    .require_policy "ant.animation|animation_controller.birth"
    .require_policy "ant.animation|animation_controller.state_machine"
    .require_policy "ant.animation|skinning"
    .require_policy "ant.render|polyline"
    .require_policy "ant.general|name"
    .require_policy "ant.scene|scene_object"
    .require_policy "ant.render|render"
    .require_policy "ant.render|render_queue"
    .require_policy "ant.objcontroller|pickup"
    .require_policy "ant.objcontroller|screen_3dobj"
    .require_policy "tools.prefab_editor|second_view"
    .require_interface "ant.camera|icamera"
    .require_interface "ant.render|ientity"
    .method "init"
    .method "init_world"
    .method "post_init"
    .method "data_changed"

system "gizmo_system"
    .implement "gizmo_system.lua"
    .method "init"
    .method "post_init"
    .method "init_world"
    .method "entity_ready"
    .method "handle_event"

system "input_system"
    .implement "input_system.lua"
    .method "data_changed"

system "gui_system"
    .implement "gui_system.lua"
    .method "init_world"
    .method "start_frame"
    .method "data_changed"
    .method "handle_event"
    .method "ui_update"
    .method "end_frame"

interface "igui"
    .implement "gui_system.lua"
    .require_interface "ant.render|irenderqueue"
    .method "scene_viewport"
    .method "cvt2scenept"

system "grid_brush_system"
    .implement "grid_brush_system.lua"
    .method "init"
    .method "post_init"
    .method "handle_event"

import "camera/camera.ecs"

import "pipeline.ecs"
