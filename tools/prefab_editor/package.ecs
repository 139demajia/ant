import "@ant.general"
import "@ant.rmlui"
import "@ant.render"
import "@ant.animation"
import "@ant.collision"
import "@ant.sky"
import "@ant.objcontroller"
import "@ant.scene"
import "@ant.camera"
import "@ant.asset"
import "@ant.effekseer"
import "@ant.prefab"

system "init_system"
    .implement "init_system.lua"
    .require_system "ant.rmlui|rmlui_system"
    .require_system "ant.prefab|prefab_system"
    .require_system "ant.effekseer|effekseer_system"
    .require_policy "ant.general|name"
    .require_policy "ant.render|render"
    .require_policy_v2 "ant.render|light"
    .require_policy "ant.render|shadow_cast_policy"
    .require_policy_v2 "ant.sky|procedural_sky"
    .require_policy "ant.collision|collider_policy"
    .require_policy "ant.sky|skybox"
    
    .require_policy_v2 "ant.animation|animation"
    .require_policy_v2 "ant.animation|animation_controller.birth"
    .require_policy_v2 "ant.animation|animation_controller.state_machine"
    .require_policy_v2 "ant.animation|skinning"
    .require_policy_v2 "ant.render|polyline"
    .require_policy_v2 "ant.general|name"
    .require_policy_v2 "ant.scene|scene_object"
    .require_policy_v2 "ant.render|render"
    .require_policy_v2 "ant.render|render_queue"
    .require_policy_v2 "ant.objcontroller|pickup"
    .require_interface "ant.camera|camera"
    .require_interface "ant.render|entity"
    .method "init"
    .method "post_init"
    .method "entity_init"

action "bind_billboard_camera"
    .implement "init_system.lua"
    .method "init"

system "gizmo_system"
    .implement "gizmo_system.lua"
    .method "init"
    .method "post_init"
    .method "entity_ready"
    .method "handle_event"

system "camera_system"
    .implement "camera_system.lua"
    .require_interface "ant.camera|camera"
    .require_interface "ant.objcontroller|obj_motion"
    .method "entity_ready"
    .method "handle_camera_event"

system "input_system"
    .implement "input_system.lua"
    .require_policy "ant.general|name"
    .require_policy "ant.render|render"
    .method "data_changed"

system "gui_system"
    .implement "gui_system.lua"
    .require_policy "ant.general|name"
    .require_policy "ant.render|render"
    .method "handle_event"
    .method "ui_update"
    .method "widget"
    .method "end_frame"

system "grid_brush_system"
    .implement "grid_brush_system.lua"
    .method "init"
    .method "post_init"
    .method "handle_event"

pipeline "init"
    .stage "init"
    .stage "post_init"

pipeline "exit"
    .stage "exit"

pipeline "update"
    .stage "timer"
    .stage "start_frame"
    .pipeline "scene_changed"
    .pipeline "scene_render"
    .pipeline "select"
    .pipeline "ui_render"
    .stage "end_frame"
    .stage "final"

pipeline "scene_render"
    .stage "widget"
    .stage "draw_geo"
    .pipeline "sky"
    .pipeline "animation"
    .stage "handle_camera_event"
    .pipeline "scene"
    .pipeline "camera"
    .stage "handle_event"
    .pipeline "collider"
    .pipeline "render"

pipeline "scene_changed"
    .pipeline "ui"
    .stage "data_changed"

pipeline "ui"
    .stage "ui_start"
    .stage "ui_update"
    .stage "ui_end"