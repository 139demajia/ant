ANT 的 runtime 会在设备本地维持一个虚拟文件系统的 cache ，通过网络向 file server 更新其中的文件。

本文档描述了和 file server 交互用的通讯协议。和 file server 交互用的 socket 通道，不仅仅用于文件交换，也会用于调试、虚拟输入设备等。文件交换协议只是交互协议的一个子集。

设备向开发机发起连接，以下运行设备被称为 C ，开发机（安装有开发环境的机器）被称为 S 。

一般情况下，不设计严格的问答请求协议，请求和回应都视为单向推送。例如，S 可以不经过 C 的请求直接发送一个文件，而 C 需要处理这种情况。C 对某个文件提出多次请求，S 可以只回应一次，也可以回应多次，多次回应时，以最后一次为准。

基本协议包为两字节(小端)长度 + 内容。长度不包括自身。例如，一个 0 字节的包，编码为 00 00 。内容由多个小节构成，每个小节均为 两字节（小端）长度 + 内容。内容可以包含 \0 。通常，第一个小节为协议名称。以下在记录协议的时候，通常只描述每个小节的含义。

请求：

AUTH (待实现)

LIST 列目录
path 目录名，/ 表示根目录

GET 获取文件
pathname 包含目录名的全路径文件名
hash 本地文件的 hash ，空表示没有本地 cache ，非空时为 md5 值，供 file server 参考。

EXIST 尝试文件或目录，判定 cache 是否需要更新。
pathname 全路径
hash 本地文件的 hash 。

回应：

DIR 推送目录
path 目录名
id 范围 id ，例如 0/10 表示这个目录有 10 个文件，这次推送从第 0 个开始。当需要推送的数据量太大时，需要多次推送。例如：0/10 5/10 两次每次都推送 5 个文件名。如果这个字段为空，表示目录不存在。
filename  文件名1 
hash 该文件的 md5 值，如果 hash 为空，表示这是一个子目录。
...

FILE 推送文件
pathname 包含目录名的全路径文件名
hash 文件 hash ，如果 hash 为空，表示文件已经不存在。通常是由于 C 请求了一个空文件。
offset/size 用来发送部分文件，对大文件来说，可能会分多条协议发送。offset 是 base 0 的，小文件可以直接 0/size 一次发送。
content 数据块。
注：offset/size 字段可以为空，这样 content 也为空。一般是当请求时发送的 hash 和 file server 的一致，所以不必发送。也可能客户端是用  EXIST 请求，没有请求内容。只需要发送确认信息。




