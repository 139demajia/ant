local runtime = import_package "ant.imguibase".runtime
runtime.start {
	policy = {
		"ant.animation|animation",
		"ant.animation|state_machine",
		"ant.animation|ozzmesh",
		"ant.animation|ozz_skinning",
		"ant.animation|skinning",
		"ant.serialize|serialize",
		"ant.bullet|collider.capsule",
		"ant.bullet|collider.box",
		"ant.bullet|collider.character",
		"ant.sky|procedural_sky",
		"ant.render|name",
		"ant.render|mesh",
		"ant.render|shadow_cast",
		"ant.render|render",
		"ant.render|bounding_draw",
		"ant.render|debug_mesh_bounding",
		"ant.render|light.directional",
		"ant.render|light.ambient",
		"ant.scene|hierarchy",
		"ant.scene|ignore_parent_scale",
		--editor
		"ant.test.features|character_controller",
		"ant.objcontroller|select",
	},
	system = {
		"ant.test.features|init_loader",
	},
	pipeline = {
		{ name = "init",
			"init",
			"post_init",
		},
		{ name = "update",
			"start",
			"timer",
			{name = "logic",
				"spawn_camera",
				"bind_camera",
				"motion_camera",
			},
			{name = "renderscene",
				"data_changed",
				"scene_update",
				{name = "collider",
					"update_collider_transform",
					"update_collider",
				},
				{ name = "animation",
					"animation_state",
					"sample_animation_pose",
					"ik",
					"skin_mesh",
				},
				{ name = "sky",
					"update_sun",
					"update_sky",
				},
				
				"widget",
				{ name = "render",
					"shadow_camera",
					"load_render_properties",
					"filter_primitive",
					"make_shadow",
					"debug_shadow",
					"cull",
					"render_commit",
					{ name = "postprocess",
						"bloom",
						"tonemapping",
						"combine_postprocess",
					}
				},
				-- editor
				"camera_control",
				"camera_lock_target",
				"pickup",
				"update_editable_hierarchy",
				{ name = "ui",
					"ui_start",
					"ui_update",
					"ui_end",
				},
			},
			"end_frame",
			"final",
		}
	}
}
