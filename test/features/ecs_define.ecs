import "@ant.animation"
import "@ant.objcontroller"
import "@ant.render"
import "@ant.sky"
import "@ant.test.features"
import "@ant.collision"
import "@ant.terrain"
import "@ant.scene"
import "@ant.splitviews"
import "@ant.asset"
import "@ant.heightmap"
import "@ant.audio"
import "@ant.efk"
import "@ant.timer"



system "init_loader_system"
    .implement "tmp_systemloader.lua"
    -- .require_system "ant.test.features|camera_controller_system"
    -- .require_system "ant.test.features|scenespace_test_system"
    -- .require_system "ant.test.features|character_ik_test_system"
    --.require_system "ant.test.features|camera_recorder_test_system"
    --.require_system "ant.test.features|skybox_test_system"
    --.require_system "ant.test.features|font_test_system"
    -- .require_system "ant.test.features|pbr_test_system"
    -- .require_system "ant.test.features|animation_test_system"
    --.require_system "ant.test.features|shadow_test_system"
    --.require_system "ant.test.features|decal_test_system"
    --.require_system "ant.test.features|water_test_system"
    --.require_system "ant.test.features|hitch_node_test_system"
    .require_system "ant.test.features|terrain_test_system"
    --.require_system "ant.test.features|dynamic_texture_test_system"
    .require_system "ant.test.features|printer_system"
    .require_system "ant.camera|camera_recorder_system"
    .require_system "ant.sky|procedural_sky_system"
    .require_system "ant.splitviews|splitviews_system"
    --.require_system "ant.render|physic_bounding_system"
    --.require_system "ant.render|render_mesh_bounding_system"
    .require_system "ant.objcontroller|default_pickup_detect_system"
    .require_system "ant.camera|default_camera_controller"
    .require_system "ant.animation|animation_system"
    .require_policy "ant.render|light"
    .require_policy "ant.sky|procedural_sky"
    .require_policy "ant.sky|skybox"
    .require_policy "ant.render|polyline"
    .require_policy "ant.general|name"
    .require_policy "ant.scene|scene_object"
    .require_policy "ant.render|render"
    .require_policy "ant.render|render_queue"
    .require_policy "ant.render|csm_queue"
    .require_policy "ant.objcontroller|pickup"
    .require_policy "ant.render|postprocess"
    .require_policy "ant.terrain|shape_terrain"
    .require_policy "ant.objcontroller|screen_3dobj"
    .require_policy "ant.render|skinrender"

    .require_interface "ant.camera|icamera"
    .require_interface "ant.objcontroller|iobj_motion"
    .require_interface "ant.render|iwidget_drawer"
    .require_interface "ant.render|ilight"
    .require_interface "ant.test.features|ivertex_attrib_visualizer"
    .require_interface "ant.timer|itimer"

    .method "init"
    .method "init_world"
    .method "entity_init"
    .method "camera_usage"

component "printer".type "lua"

system "printer_system"
    .implement "printer.lua"
    .require_interface "ant.test.features|iterrain"
    .method "init"
    .method "update_filter"
    .method "render_submit"

system "animation_test_system"
    .implement "animation_test.lua"
    .method "init"

system "character_ik_test_system"
    .implement "character_ik_test.lua"
    .method "init"

system "pbr_test_system"
    .implement "pbr_test.lua"
    .method "init"

system "scenespace_test_system"
    .implement "scenespace_test.lua"
    .method "init"


system "shadow_test_system"
    .implement "shadow_test.lua"
    .method "init"
    .method "entity_init"


system "decal_test_system"
    .implement "decal_test.lua"
    .method "init"

system "camera_recorder_test_system"
    .implement "camera_recorder_test.lua"
    .require_system "ant.camera|camera_recorder_system"
    .method "data_changed"

system "font_test_system"
    .implement "font_test.lua"
    .require_policy "ant.render|show_name"
    .method "init"

system "terrain_test_system"
    .implement "terrain_test.lua"
    .require_interface "ant.test.features|iterrain"
    .method "init"
    .method "data_changed"


system "water_test_system"
    .implement "water_test.lua"
    .require_policy "ant.terrain|water"
    .method "init"

system "terrain_entity_test_system"
    .implement "terrain_entity_test.lua"
    .method "init"
    .method "init_world"
    .method "data_changed"
    .method "camera_usage"

system "hitch_node_test_system"
    .implement "hitch_node.lua"
    .method "init"
    .method "data_changed"



system "dynamic_texture_test_system"
    .require_system "ant.render|billboard_system"
    .require_policy "ant.render|billboard"
    .implement "texture_test.lua"
    .method "init"
    .method "data_changed"

system "terrain_system"
    .implement "terrain.lua"
    .method "data_changed"

interface "iterrain"
    .implement "terrain.lua"
    .method "gen_terrain_field"
    .method "create_roadnet_entity"
    .method "update_roadnet_entity"
    .method "delete_roadnet_entity"

import "debug/vertex_attrib_visualizer.ecs"